#-------------------------------------------------------------------------------
# Name:        –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å —Ñ–æ—Ä—É–º–∞ ASCON
# version:     v0.3.2
#
# Author:      dimak222
#
# Created:     25.08.2022
# Copyright:   (c) dimak222 2022
# Licence:     No
#-------------------------------------------------------------------------------

title = "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ñ–æ—Ä—É–º–∞ ASCON"

icon = r"C:\Users\–ö–∞—à–∏—Ä—Å–∫–∏—Ö –î–º–∏—Ç—Ä–∏–π\Desktop\–î–º–∏—Ç—Ä–∏–π\–ì–û–°–¢\–ü—Ä–æ—á–µ–µ\–ú–∞–∫—Ä–æ—Å—ã\–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ñ–æ—Ä—É–º–∞ ASCON\cat.ico" # –∏–∫–æ–Ω–∫–∞ –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏

from sys import exit # –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–µ–∑ –æ—à–∏–±–∫–∏

def DoubleExe():# –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —Å –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã–º –∫–æ–Ω—Å–æ–ª—å–Ω—ã–º –æ–∫–Ω–æ–º "CREATE_NO_WINDOW"

    import subprocess # –º–æ–¥—É–ª—å –≤—ã–≤–æ–¥–∞ –∑–∞–ø—É—â–µ–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    from sys import exit # –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–µ–∑ –æ—à–∏–±–∫–∏

    CREATE_NO_WINDOW = 0x08000000 # –æ—Ç–∫–ª—é—á—ë–Ω–Ω–æ–µ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    processes = subprocess.Popen('tasklist', stdin=subprocess.PIPE, stderr=subprocess.PIPE, stdout=subprocess.PIPE, creationflags=CREATE_NO_WINDOW).communicate()[0] # —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    processes = processes.decode('cp866') # –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞

    if str(processes).find(title[0:25]) != -1: # –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –≤ 25 —Å–∏–º–≤–æ–ª–æ–≤
        message(0, "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ!") # —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö –æ–∫–æ–Ω –∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–∫—Ä—ã—Ç–∏–µ–º
        exit() # –≤—ã—Ö–æ–¥–∏–º –∏–∑ –ø—Ä–æ–≥—Ä–∞–º—ã

def resource_path(relative_path): # –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤–Ω—É—Ç—Ä–∏ exe —Ñ–∞–π–ª–∞

    import os # –º–æ–¥—É–ª—å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã

    try:
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(".")

    return os.path.join(base_path, relative_path)

def message(counter, text = "–û—à–∏–±–∫–∞!"): # —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö –æ–∫–æ–Ω –∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–∫—Ä—ã—Ç–∏–µ–º

    import tkinter.messagebox as mb # –æ–∫–Ω–æ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    import tkinter as tk # –º–æ–¥—É–ª—å –æ–∫–æ–Ω

    if counter == 0: # –≤—Ä–µ–º—è –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–µ—Å–ª–∏ 0)
        counter = 4 # –∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫
    window = tk.Tk() # —Å–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞
    window.iconbitmap(default = resource_path("cat.ico")) # –∑–Ω–∞—á—ë–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    window.attributes("-topmost",True) # –æ–∫–Ω–æ –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö –æ–∫–æ–Ω
    window.withdraw() # —Å–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ "–Ω–µ–≤–∏–¥–∏–º–æ–µ"
    time = counter * 1000 # –≤—Ä–µ–º—è –≤ –º–∏–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    window.after(time, window.destroy) # –∑–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞ —á–µ—Ä–µ–∑ n –º–∏–ª–∏—Å–µ–∫
    if mb.showinfo(title, text) == "": # –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
        pass
    else:
        window.destroy() # –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ –ø–æ –∫–Ω–æ–ø–∫–µ
    window.mainloop() # –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–∫–Ω–∞

def ASCON(): # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç ASCONa

    import urllib.request # –º–æ–¥—É–ª—å –æ—Ç–∫—Ä—ã—Ç–∏—è URL-–∞–¥—Ä–µ—Å–∞
    import re # —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è

    global ASCON_message

    dictionary = {r"&nbsp;":" ", # —Å–ª–æ–≤–∞—Ä—å –∑–∞–º–µ–Ω
                r"&quot;":'"',
    			r"&amp;":"&",
    			r"\<blockquote class=[^\>]+\>":'\n"',
    			r"\<br\>\</blockquote\>":'"\n',
                r"</a></cite>" : " ",
    			r"<img src=\"https://forum.ascon.ru/Smileys/fugue/smiley.gif\" alt=\"&#58;&#41;\" title=\"Smiley\" class=\"smiley\">":"üòÑ",
    			r"<img src=\"https://forum.ascon.ru/Smileys/fugue/wink.gif\" alt=\";&#41;\" title=\"Wink\" class=\"smiley\">":"üòâ",
    			r"<img src=\"https://forum.ascon.ru/Smileys/fugue/shocked.gif\" alt=\"&#58;o\" title=\"Shocked\" class=\"smiley\">":"üò±",
    			r"<img src=\"https://forum.ascon.ru/Smileys/fugue/sad.gif\" alt=\"&#58;&#40;\" title=\"Sad\" class=\"smiley\">":"üòî",
    			r"<img src=\"https://forum.ascon.ru/Smileys/fugue/blink.gif\" alt=\"8-&#41;\" title=\"\" class=\"smiley\">":"üòâ",
    			r"<img src=\"https://forum.ascon.ru/Smileys/fugue/cry.gif\" alt=\"&#58;`&#40;\" title=\"Cry\" class=\"smiley\">":"üò≠",
    			r"<img src=\"https://forum.ascon.ru/Smileys/fugue/mad.gif\" alt=\"&gt;&#58;&#40;\" title=\"Mad\" class=\"smiley\">":"ü§¨",
    			r"<img src=\"https://forum.ascon.ru/Smileys/fugue/shuffle.gif\" alt=\"&#58;shu&#58;\" title=\"Shuffle\" class=\"smiley\">":"=/",
                r"<img src=\"https://forum.ascon.ru/Smileys/fugue/angel.gif\" alt=\"&#58;angel&#58;\" title=\"angel\" class=\"smiley\">":"üòá",
                r"<img src=\"https://forum.ascon.ru/Smileys/fugue/rolleyes.gif\" alt=\"&#58;&#58;&#41;\" title=\"Roll Eyes\" class=\"smiley\">":"üôÑ",
                r"<br>":"\n",
    			r"(<[^>]+?>)":"",
                r"&gt;":">",
                r"&#39;": "'"}

    html = site_processing("https://forum.ascon.ru/index.php?action=recent") # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–∞

    topic = notification_message("rel=\"nofollow\" title=\"Re: (.+)\"", html) # –ø–æ–∏—Å–∫ –∏ –≤—ã–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ html (–º–∞—Å–∫–∞ –ø–æ–∏—Å–∫–∞, —Ç–µ–∫—Å—Ç –≥–¥–µ –∏—Å–∫–∞—Ç—å)
    autor = notification_message("–ü–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç –æ—Ç <.+>\<a.+\"\>(.+)\<\/a\>", html) # –ø–æ–∏—Å–∫ –∏ –≤—ã–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ html (–º–∞—Å–∫–∞ –ø–æ–∏—Å–∫–∞, —Ç–µ–∫—Å—Ç –≥–¥–µ –∏—Å–∫–∞—Ç—å)
    msg = notification_message("<div class=\"list_posts\">(.+)<\/div>", html) # –ø–æ–∏—Å–∫ –∏ –≤—ã–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ html (–º–∞—Å–∫–∞ –ø–æ–∏—Å–∫–∞, —Ç–µ–∫—Å—Ç –≥–¥–µ –∏—Å–∫–∞—Ç—å)
    launch = notification_message("\/ <a href=\"(.+)\" rel=\"nofollow\" title=\"Re:", html) # –ø–æ–∏—Å–∫ –∏ –≤—ã–≤–æ–¥ –ø—É—Ç–∏ –∫ —Ç–µ–º–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ html (–º–∞—Å–∫–∞ –ø–æ–∏—Å–∫–∞, —Ç–µ–∫—Å—Ç –≥–¥–µ –∏—Å–∫–∞—Ç—å)

    topic = dictionary_processing(topic, dictionary) # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ —Å–ª–æ–≤–∞—Ä—é
    msg = dictionary_processing(msg, dictionary) # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ —Å–ª–æ–≤–∞—Ä—é

    if ASCON_message != "": # –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è —Å—Ä–∞–≤–Ω–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

        if msg != ASCON_message:

            print(topic + "–û—Ç " + autor + ":" + msg)
    ##            WindowsBalloonTip(topic + "–û—Ç " + autor + ":" + msg) # –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Windows (–∏—Å—á–µ–∑–∞–µ—Ç –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏)

            Windows_msg(Name_app = title, title = topic, msg = "–û—Ç " + autor + ": " + msg, duration = "short", icon = icon, launch = launch) # —Å–æ–æ–±—â–µ–Ω–∏–µ Windows
            ASCON_message = msg # –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

        else:
            print("–ù–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç!")

    else: # –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏—Å–≤–æ–∏—Ç—å –µ–º—É —Ç–µ–∫—Å—Ç

        print("–ü–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—Ç!"),
        Windows_msg(Name_app = "–ü–µ—Ä–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ñ–æ—Ä—É–º–∞ ASCON", title = topic, msg = "–û—Ç " + autor + ": " + msg, duration = "short", icon = icon, launch = launch) # —Å–æ–æ–±—â–µ–Ω–∏–µ Windows
        ASCON_message = msg # –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

def Txt_file(): # —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ —Å txt —Ñ–∞–π–ª–∞

    import os # —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
    from sys import exit # –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–µ–∑ –æ—à–∏–±–∫–∏

    name_txt_file = title + ".txt" # –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞

    if os.path.exists(name_txt_file): # –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ
        try:

            txt_file = open(name_txt_file, encoding = "utf-8") # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
            lines = txt_file.readlines() # —Å—á–∏—Ç—ã–≤–∞–µ–º –≤–µ—Å—å —Ñ–∞–π–ª
            txt_file.close() # –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

            if lines == []: # –µ—Å–ª–∏ –≤ —Ñ–∞–π–ª–µ –Ω–µ—Ç –∑–∞–ø–∏—Å–∏, –≤–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª –æ–ø—Ü–∏–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
                to_create_txt_file(name_txt_file) # —Å–æ–∑–¥–∞—Ç—å txt —Ñ–∞–π–ª —Å –∑–∞–ø–∏—Å—å—é –≤ –Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–π (–ø—É—Ç—å –∫ txt —Ñ–∞–π–ª—É)
            else:
                text_processing(lines, name_txt_file) # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ (—Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞, –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É)

        except SystemExit: # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω "exit()"
            exit() # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É

        except:
            message(8, "–ü—Ä–æ–≤–µ—Ä—Ç–µ txt —Ñ–∞–π–ª: \"" + name_txt_file + "\"\n–ò–ª–∏ —É–¥–∞–ª–∏—Ç–µ —Ñ–∞–π–ª, –Ω–æ–≤—ã–π –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.") # —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö –æ–∫–æ–Ω –∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–∫—Ä—ã—Ç–∏–µ–º
            exit() # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É

    else: # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∞–π–ª —Ä—è–¥–æ–º —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π
        to_create_txt_file(name_txt_file) # —Å–æ–∑–¥–∞—Ç—å txt —Ñ–∞–π–ª —Å –∑–∞–ø–∏—Å—å—é –≤ –Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–π (–ø—É—Ç—å –∫ txt —Ñ–∞–π–ª—É)

def text_processing(lines, Path): # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ (—Å—Ç—Ä–æ–∫–∏ —Ç–µ–∫—Å—Ç–∞, –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É)

    import os # —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
    from sys import exit # –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–µ–∑ –æ—à–∏–±–∫–∏

    global dictionary # —Å–ª–æ–≤–∞—Ä—å —Å –ø—É—Ç—è–º–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è (—á—Ç–æ –ø–µ—Ä–µ–º–µ—â–∞–µ–º : –∫—É–¥–∞ –ø–µ—Ä–µ–º–µ—â–∞–µ–º)

    try: # –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ txt —Ñ–∞–π–ª–µ

        lines_clean = clearing_the_list(lines) # –æ—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ —Å—Ç—Ä–æ–∫ –æ—Ç "#"

        if lines_clean == []: # –µ—Å–ª–∏ txt —Ñ–∞–π–ª –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω –≤—ã–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
            message(0, "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ txt —Ñ–∞–π–ª!") # —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö –æ–∫–æ–Ω –∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–∫—Ä—ã—Ç–∏–µ–º
            exit() # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É

        for line in lines_clean: # –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –æ–±—Ä–∞–±–æ—Ç–∫—É
            Paths = line.split("=") # –¥–µ–ª–∏–º –ø–æ "="
            try:
                Paths[0] = Paths[0].strip().strip('"') # —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ "..." (–∫–∞–≤—ã—á–∫–∏) –ø–æ –±–æ–∫–∞–º
                Paths[1] = Paths[1].strip().strip('"') # —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ "..." (–∫–∞–≤—ã—á–∫–∏) –ø–æ –±–æ–∫–∞–º

                dictionary[os.path.join(Paths[0])] = os.path.join(Paths[1], os.path.basename(Paths[0])) # –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å –ø—É—Ç–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è (—á—Ç–æ –ø–µ—Ä–µ–º–µ—â–∞–µ–º : –∫—É–¥–∞ –ø–µ—Ä–µ–º–µ—â–∞–µ–º + –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞)

            except:
                pass

    except SystemExit: # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω "exit()"
        exit() # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É

    except:
        if askyesno("–ü—Ä–æ–≤–µ—Ä—Ç–µ –≤ txt —Ñ–∞–π–ª–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è: \"" + parameter[0] + "\"\n–ò–ª–∏ —É–¥–∞–ª–∏—Ç–µ —Ñ–∞–π–ª, –Ω–æ–≤—ã–π –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏." + "\n–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è?"): # –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö –æ–∫–æ–Ω
            os.startfile(Path) # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
        exit() # –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É

def to_create_txt_file(Path): # —Å–æ–∑–¥–∞—Ç—å txt —Ñ–∞–π–ª —Å –∑–∞–ø–∏—Å—å—é –≤ –Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–π (–ø—É—Ç—å –∫ txt —Ñ–∞–π–ª—É)

    import os # —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
    from sys import exit # –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–µ–∑ –æ—à–∏–±–∫–∏

    txt_file = open(Path, "w+") # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –∑–∞–ø–∏—Å–∏ (w+), –¥–ª—è —á—Ç–µ–Ω–∏—è (r), (–Ω–µ–≤–∏–¥–∏–º—ã–π —Ä–µ–∂–∏–º)

    txt = """# –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫–æ–ø–∏—Ä—É–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ (–∏–ª–∏ –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º) = –ü—É—Ç—å –∫—É–¥–∞ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
# "cat.ico" = "C:\\Users\\Cat\\Desktop"
# "C:\\cat.ico" = "C:\\Users\\Cat\\Desktop"
# C:\\cat.ico = C:\\Users\\Cat\\Desktop
#-------------------------------------------------------------------------------""" # —Ç–µ–∫—Å—Ç –∑–∞–ø–∏—Å—ã–≤–∞–µ–º—ã–π –≤ .txt —Ñ–∞–π–ª

    txt_file.write(txt) # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª
    txt_file.close() # –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª

    os.startfile(Path) # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤ —Å–∏—Å—Ç–µ–º–µ
    message(0, "–°–æ–∑–¥–∞–Ω txt —Ñ–∞–π–ª: \"" + Path + "\"\n–í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è!") # —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ñ–∞–π–ª–∞
    exit() # –≤—ã—Ö–æ–¥–∏–º

def clearing_the_list(lines): # –æ—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ —Å—Ç—Ä–æ–∫ –æ—Ç "#"

    lines_clean = [] # —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ —Å —á–∏—Å—Ç—ã–º —Ç–µ–∫—Å—Ç–æ–º (–±–µ–∑ —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å–ª–µ "#")

    for line in lines: # –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –æ–±—Ä–∞–±–æ—Ç–∫—É

        if line.isspace(): # –µ—Å–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
            continue

        line_clean = line.split("#", 1)[0] # –µ—Å–ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ –µ—Å—Ç—å "#" –Ω–µ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤—Å—ë —á—Ç–æ –ø–æ—Å–ª–µ –Ω–µ—ë

        if line_clean == "": # –µ—Å–ª–∏ –Ω–µ—Ç –∑–∞–ø–∏—Å–∏ –¥–æ #, –ø—Ä–æ–ø—É—Å—Ç–∏—å —Å—Ç—Ä–æ–∫—É
            continue

        lines_clean.append(line_clean) # —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ —Å —á–∏—Å—Ç—ã–º —Ç–µ–∫—Å—Ç–æ–º (–±–µ–∑ —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å–ª–µ "#")

    return lines_clean # –≤–æ–∑–≤—Ä—è—â–∞–µ–º —á–∏—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏

def site_processing(site): # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–∞

    import urllib.request # –º–æ–¥—É–ª—å –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–∞–π—Ç–æ–≤

    response = urllib.request.urlopen(site) # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å–∞–π—Ç
    html = response.read().decode("utf-8") # —Å—á–∏—Ç—ã–≤–∞–µ–º —Å –Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
    response.close() # –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥—É–ª—å

    return html # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—á–∏—Ç–∞–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —Å–∞–π—Ç–∞

def notification_message(mask, html): # –ø–æ–∏—Å–∫ –∏ –≤—ã–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ html (–º–∞—Å–∫–∞ –ø–æ–∏—Å–∫–∞, —Ç–µ–∫—Å—Ç –≥–¥–µ –∏—Å–∫–∞—Ç—å)

    import re # –º–æ–¥—É–ª—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π

    z = 0 # –Ω–æ–º–µ—Ä –ø–æ–∏—Å–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è

    text = re.findall(mask, html)[z] # –∏—â–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã

    return text # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞–π–¥–µ–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è

def dictionary_processing(text, dictionary): # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ —Å–ª–æ–≤–∞—Ä—é

    import re # –º–æ–¥—É–ª—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π

    for key in dictionary: # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –∑–∞–º–µ–Ω—É –∏–∑ —Å–ª–æ–≤–∞—Ä—è
        text = re.sub(key, dictionary[key], text) # –º–µ–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è

    return text

def Windows_msg(Name_app = "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", title = "–ó–∞–≥–æ–ª–æ–≤–æ–∫", msg = "–°–æ–æ–±—â–µ–Ω–∏–µ", duration = "short", icon = "", launch = ""): # —Å–æ–æ–±—â–µ–Ω–∏–µ Windows

    from winotify import Notification, audio

    toast = Notification(app_id = Name_app, # –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
                         title = title, # –∑–∞–≥–æ–ª–æ–≤–æ–∫
                         msg = msg, # —Å–æ–æ–±—â–µ–Ω–∏–µ
                         duration = duration, # –≤—Ä–µ–º—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è ("short" –∏–ª–∏ "long")
                         icon = icon, # –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –∏–∫–æ–Ω–∫–µ
                         launch = launch) # —á—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ

    toast.set_audio(audio.Default, loop = False) # –∑–≤—É–∫ —Å–æ–æ–±—â–µ–Ω–∏—è

##    toast.add_actions(label = "–°—Å—ã–ª–∫–∞", launch = "https://github.com/versa-syahptr/winotify/") # –∫–Ω–æ–ø–∫–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏

    toast.show() # –∑–∞–ø—É—Å—Ç–∏—Ç—å

def Sleep(n, m): # –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ–µ –æ—Ç n –¥–æ m —Å–µ–∫—É–Ω–¥

    import random # –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
    import time # –º–æ–¥—É–ª—å –¥–ª—è –ø–∞—É–∑

    randomN = random.randint(n, m) # —Å–ª—É—á–∞–π–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç n –¥–æ m

    time.sleep(randomN) # –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ n —Å–µ–∫—É–Ω–¥

#-------------------------------------------------------------------------------
# —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è

##from win32gui import *
##import pythoncom, win32con, sys, os

class WindowsBalloonTip: # –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Windows (–∏—Å—á–µ–∑–∞–µ—Ç –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏)

    def __init__(self, title, msg):

        message_map = {win32con.WM_DESTROY: self.OnDestroy}
        wc = WNDCLASS()
        hinst = wc.hInstance = GetModuleHandle(None)
        wc.lpszClassName = "PythonTaskbar"
        wc.lpfnWndProc = message_map
        try:
            classAtom = RegisterClass(wc)
        except:
            pass
        style = win32con.WS_OVERLAPPED | win32con.WS_SYSMENU
        self.hwnd = CreateWindow(classAtom, "Taskbar", style, 0, 0, win32con.CW_USEDEFAULT, win32con.CW_USEDEFAULT, 0, 0, hinst, None)
        UpdateWindow(self.hwnd)
        iconPathName = os.path.abspath(os.path.join(sys.path[0], "cat.ico"))
        icon_flags = win32con.LR_LOADFROMFILE | win32con.LR_DEFAULTSIZE
        try:
        	hicon = LoadImage(hinst, iconPathName, win32con.IMAGE_ICON, 0, 0, icon_flags)
        except:
        	hicon = LoadIcon(0, win32con.IDI_APPLICATION)
        flags = NIF_ICON | NIF_MESSAGE | NIF_TIP
        nid = (self.hwnd, 0, flags, win32con.WM_USER+20, hicon, "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö")
        Shell_NotifyIcon(NIM_ADD, nid)
        Shell_NotifyIcon(NIM_MODIFY, (self.hwnd, 0, NIF_INFO, win32con.WM_USER+20, hicon, "Balloon tooltip", msg, 200, title))
        time.sleep(10) # –≤—Ä–µ–º—è –¥–æ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è)
        DestroyWindow(self.hwnd)
        UnregisterClass(classAtom, hinst)
    def OnDestroy(self, hwnd, title, wparam, lparam):
        nid = (self.hwnd, 0)
        Shell_NotifyIcon(NIM_DELETE, nid)
        PostQuitMessage(0)

#-------------------------------------------------------------------------------

ASCON_message = "" # —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
err = 0 # —Å—á—ë—Ç—á–∏–∫ –æ—à–∏–±–æ–∫

##DoubleExe() # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —Å –æ—Ç–∫–ª—é—á—ë–Ω–Ω—ã–º –∫–æ–Ω—Å–æ–ª—å–Ω—ã–º –æ–∫–Ω–æ–º "CREATE_NO_WINDOW"

while 1: # —Ü—ã–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π

    try: # –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É

        ASCON() # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç ASCONa

        err = 0 # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –æ—à–∏–±–æ–∫

        Sleep(55, 100) # –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ–µ –æ—Ç n –¥–æ m —Å–µ–∫—É–Ω–¥

    except Exception as e: # –ª–æ–≤–∏–º –ª—é–±—ã–µ –æ—à–∏–±–∫–∏

        print("–û—à–∏–±–∫–∞" , err, ":", e)

        if err < 11: # –µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –º–µ–Ω—å—à–µ –∑–∞–¥–æ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞

            err += 1 # –¥–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫ —Å—á—ë—Ç—á–∏–∫—É –æ—à–∏–±–æ–∫

            Sleep(5, 10) # –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ–µ –æ—Ç n –¥–æ m —Å–µ–∫—É–Ω–¥

        else:
            Windows_msg(Name_app = "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Ñ–æ—Ä—É–º–∞ ASCON", title = "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–æ!", msg = "–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: " + "\"" + str(e) + "\"", duration = "short", icon = icon, launch = "") # —Å–æ–æ–±—â–µ–Ω–∏–µ Windows
            exit() # –≤—ã—Ö–æ–¥–∏–º –∏–∑ –ø—Ä–æ–≥—Ä–∞–º—ã